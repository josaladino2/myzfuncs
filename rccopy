rccopy () {
	if [ "$1" = "-p" ]; then
		Progress="--progress"
		shift
	elif [ "$1" = "-t" ]; then
		ShowTime="Y"
		shift
	else
		Progress=""
	fi
	if [ -z ${2} ]; then
		echo "Usage: rccopy [-p] Src Remote"
		exit 1
	else
	local Src=${1:-"/ncBackup"} # Full Path to Backup Directory
	local Remote=${2:-"OneDrive:"}
	local SECONDS2=$(date +%s)
		duration2=$(($(date +%s)-SECONDS2))
	local duration2
	if [ $Remote = "DropBox:" ]; then
		DropBoxMode="--dropbox-batch-mode --dropbox-chunk-size 128M"
	fi
	cd ${Src}
	ls -d */* > InFile
	while read line
	do
		SECONDS2=$(date +%s)
		echo -e "
  rclone $line"
		echo "    to"
		if [ -z $Progress ]; then
			printf "  ${Remote}/${line}..." #		--multi-thread-streams 6
		else
			echo "  ${Remote}/${line}..." #		--multi-thread-streams 6
		fi
		rclone ${Progress} ${DropBoxMode} --cache-db-purge --buffer-size 2G copyto ${line} ${Remote}/${line}
		results=$?
		if [[ $results -eq 0 ]]; then
			echo "Done"
		else
			echo "Errors ($results)"
		fi
		duration2=$(($(date +%s)-SECONDS2))
		if [ $ShowTime = "Y" ]; then
			echo -e "
  ** Upload of ${Remote}/${line}
  completed in $(show_time ${duration2})"
		fi
	done < InFile
	rm -f InFile
	fi
}
